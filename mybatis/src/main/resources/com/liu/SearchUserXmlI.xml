<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper  namespace="com.liu.SearchUserXmlI"  >


	<select id="searchUsers" parameterType="java.lang.String" resultType="com.liu.User" >
		  select id ,name from t_user where id=#{id}
	</select>


	<!--集合嵌套Select查询  ofType为输入类型也就是集合中的泛型 property为java中的字段  foreignColumn为关联的外检，一般用联合结果查询效率更高-->
	<resultMap id="rep" type="com.liu.UserRole">
		<result column="id" property="id"/>
		<result column="name" property="name"/>
		<collection property="role" ofType="java.lang.String" column="id"     foreignColumn="userid" select="searchUserRoles2"/>
	</resultMap>

	<select id="searchUserRoles" parameterType="java.lang.String" resultMap="rep">
		select id ,name from t_user where id=#{id}
	</select>


	<select id="searchUserRoles2"  parameterType="java.lang.String" resultType="java.lang.String">

		  SELECT role  from t_role   where userid=#{id}
	</select>


<!-- 集合的嵌套结果查询  ofType为输入类型也就是集合中的泛型 property为java中的字段 -->
	<resultMap id="rep2" type="com.liu.UserRole">
		<result column="id" property="id"/>
		<result column="name" property="name"/>
		<collection property="role" ofType="java.lang.String" >
			<result column="role"/>
		</collection>
	</resultMap>


	<select id="searchUserRoles3" parameterType="java.lang.String" resultMap="rep2" >
		SELECT t1.id,t1.name,t2.role from t_user t1,t_role t2 where t1.id=t2.userid
	</select>

	<update id="updateUser" parameterType="com.liu.User" >
		update t_user set name=#{name} where id=#{id}
	</update>


</mapper>
